// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form component  should match the snapshot 1`] = `
.c0 {
  position: relative;
  margin-bottom: 20px;
  min-width: 250px;
  width: 100%;
}

.c1 {
  display: block;
  font-weight: bold;
  margin: 8px 0 0;
}

.c2 {
  position: relative;
}

.c3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: bold;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  line-height: 24px;
  min-height: 40px;
  padding: 4px 16px;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  background-color: #1250C4;
  color: #ffffff;
  border: 2px solid #1250C4;
  box-shadow: 0px 3px 1px -2px rgba(153,153,153,0.2),0px 2px 2px 0px rgba(153,153,153,0.14),0px 1px 5px 0px rgba(153,153,153,0.12);
}

.c3:hover {
  box-shadow: 0px 2px 4px -1px rgba(0,47,123,0.2),0px 4px 5px 0px rgba(0,47,123,0.14),0px 1px 10px 0px rgba(0,47,123,0.12);
  background-color: #002F7B;
  border-color: #002F7B;
}

.c3:focus,
.c3:focus-within {
  box-shadow: 0px 2px 4px -1px rgba(18,80,196,0.2),0px 4px 5px 0px rgba(18,80,196,0.14),0px 1px 10px 0px rgba(18,80,196,0.12);
}

.c3:active {
  box-shadow: 0px 5px 5px -3px rgba(0,47,123,0.2),0px 8px 10px 1px rgba(0,47,123,0.14),0px 3px 14px 2px rgba(0,47,123,0.12);
  background-color: #002F7B;
}

.c3 .Button__ButtonIcon-sc-1ovnfsw-0 function (_ref6) {
  -webkit-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -moz-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -ms-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  return: "\\n          font-size: ".concat(fontSizes[size],";\\n          margin-right: ").concat(xxsmall,"px;\\n        ");
}

.c3 .Button__ButtonIcon-sc-1ovnfsw-0 function (_ref6) var fontSizes = {
  xsmall: "".concat(medium,"px"), small:"".concat(medium,"px"), medium:"".concat(large,"px"), large:"".concat(large,"px"), xlarge:"".concat(large,"px");
}

<form
  noValidate={true}
  onSubmit={[Function]}
>
  <div
    className="c0"
  >
    <label
      className="c1"
      htmlFor="input-0"
    >
      required
    </label>
    
    <div
      className="c2"
    >
      <input
        disabled={false}
        id="input-0"
        mask={[Function]}
        maxLength={255}
        minLength={0}
        name="required"
        onChange={[Function]}
        placeholder=""
        render={[Function]}
        required={false}
        type="text"
        validate={[Function]}
        value=""
      />
      
      
    </div>
    
    
  </div>
  <div
    className="c0"
  >
    <label
      className="c1"
      htmlFor="input-1"
    >
      CPF
    </label>
    
    <div
      className="c2"
    >
      <input
        disabled={false}
        id="input-1"
        mask={[Function]}
        maxLength={255}
        minLength={0}
        name="cpf"
        onChange={[Function]}
        placeholder=""
        render={[Function]}
        required={false}
        type="text"
        validate={[Function]}
        value=""
      />
      
      
    </div>
    
    
  </div>
  <div
    className="c0"
  >
    <label
      className="c1"
      htmlFor="input-2"
    >
      CEP
    </label>
    
    <div
      className="c2"
    >
      <input
        disabled={false}
        id="input-2"
        mask={[Function]}
        maxLength={255}
        minLength={0}
        name="cep"
        onChange={[Function]}
        placeholder=""
        render={[Function]}
        required={false}
        type="text"
        validate={[Function]}
        value=""
      />
      
      
    </div>
    
    
  </div>
  <div
    className="c0"
  >
    <label
      className="c1"
      htmlFor="input-3"
    >
      Birthday
    </label>
    
    <div
      className="c2"
    >
      <input
        disabled={false}
        id="input-3"
        mask={[Function]}
        maxLength={255}
        minLength={0}
        name="birthday"
        onChange={[Function]}
        placeholder=""
        render={[Function]}
        required={false}
        type="text"
        validate={[Function]}
        value=""
      />
      
      
    </div>
    
    
  </div>
  <div
    className="c0"
  >
    <label
      className="c1"
      htmlFor="input-4"
    >
      E-mail
    </label>
    
    <div
      className="c2"
    >
      <input
        disabled={false}
        id="input-4"
        mask={[Function]}
        maxLength={255}
        minLength={0}
        name="email"
        onChange={[Function]}
        placeholder=""
        render={[Function]}
        required={false}
        type="text"
        validate={[Function]}
        value=""
      />
      
      
    </div>
    
    
  </div>
  <div
    className="c0"
  >
    <label
      className="c1"
      htmlFor="input-5"
    >
      Address
    </label>
    
    <div
      className="c2"
    >
      <input
        disabled={false}
        id="input-5"
        mask={[Function]}
        maxLength={255}
        minLength="8"
        name="address"
        onChange={[Function]}
        placeholder=""
        render={[Function]}
        required={false}
        type="text"
        validate={[Function]}
        value=""
      />
      
      
    </div>
    
    
  </div>
  <div
    className="c0"
  >
    <label
      className="c1"
      htmlFor="input-6"
    >
      Country
    </label>
    
    <div
      className="c2"
    >
      <input
        disabled={false}
        id="input-6"
        mask={[Function]}
        maxLength="3"
        minLength={0}
        name="country"
        onChange={[Function]}
        placeholder=""
        render={[Function]}
        required={false}
        type="text"
        validate={[Function]}
        value=""
      />
      
      
    </div>
    
    
  </div>
  <button
    className="c3"
    disabled={false}
    onClick={[Function]}
    size="medium"
    type="submit"
  >
    
     Enviar 
  </button>
</form>
`;
