// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Content /> Should match the snapshot 1`] = `
.c1 {
  margin-top: 4px;
  margin-bottom: 4px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

<List.Content
  content=""
  header=""
  subheader=""
>
  <Content>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Content__ContentBox-sc-1fmj11p-0",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "display:flex;flex-direction:column;",
            ],
          },
          "displayName": "Content",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Content__ContentBox-sc-1fmj11p-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <List.Header>
          <Header>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Header__Title-e8ruju-0",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "margin-top:4px;margin-bottom:4px;",
                    ],
                  },
                  "displayName": "Header",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Header__Title-e8ruju-0",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c1"
              />
            </StyledComponent>
          </Header>
        </List.Header>
      </div>
    </StyledComponent>
  </Content>
</List.Content>
`;
