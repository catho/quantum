// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Content /> Should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <List.Content
    content={Object {}}
    header=""
    subheader=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <React.Fragment>
        <List.Header>
          
        </List.Header>
        
      </React.Fragment>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <List.Header>
            
          </List.Header>,
          "",
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "",
          },
          "ref": null,
          "rendered": "",
          "type": [Function],
        },
        "",
      ],
      "type": Symbol(react.fragment),
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Content__ContentBox-sc-1fmj11p-0",
        "isStatic": true,
        "rules": Array [
          "display:flex;flex-direction:column;",
        ],
      },
      "displayName": "Content",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "Content__ContentBox-sc-1fmj11p-0",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <React.Fragment>
          <List.Header>
            
          </List.Header>
          
        </React.Fragment>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <List.Header>
              
            </List.Header>,
            "",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "",
            },
            "ref": null,
            "rendered": "",
            "type": [Function],
          },
          "",
        ],
        "type": Symbol(react.fragment),
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Content__ContentBox-sc-1fmj11p-0",
          "isStatic": true,
          "rules": Array [
            "display:flex;flex-direction:column;",
          ],
        },
        "displayName": "Content",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Content__ContentBox-sc-1fmj11p-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
