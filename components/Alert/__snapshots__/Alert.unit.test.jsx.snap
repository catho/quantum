// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Alert component Should match the snapshot of a simple alert 1`] = `
.c7 {
  pointer-events: none;
  margin-right: 8px;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: bold;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.2px;
  -moz-letter-spacing: 0.2px;
  -ms-letter-spacing: 0.2px;
  letter-spacing: 0.2px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  line-height: 24px;
  min-height: 40px;
  padding: 8px 16px;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  background-color: #999999;
  color: #f2f2f2;
  border: 1px solid #999999;
  box-shadow: 0px 3px 1px -2px rgba(153,153,153,0.2),0px 2px 2px 0px rgba(153,153,153,0.14),0px 1px 5px 0px rgba(153,153,153,0.12);
}

.c5:hover {
  box-shadow: 0px 2px 4px -1px rgba(76,76,76,0.2),0px 4px 5px 0px rgba(76,76,76,0.14),0px 1px 10px 0px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
  border-color: #4c4c4c;
}

.c5:focus,
.c5:focus-within {
  box-shadow: 0px 2px 4px -1px rgba(153,153,153,0.2),0px 4px 5px 0px rgba(153,153,153,0.14),0px 1px 10px 0px rgba(153,153,153,0.12);
}

.c5:active {
  box-shadow: 0px 5px 5px -3px rgba(76,76,76,0.2),0px 8px 10px 1px rgba(76,76,76,0.14),0px 3px 14px 2px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
}

.c5 .c6 function (_ref6) {
  -webkit-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -moz-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -ms-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  return: "\\n          font-size: ".concat(sizes[size],";\\n          margin-right: ").concat(xxsmall,"px;\\n        ");
}

.c5 .c6 function (_ref6) var sizes = {
  xsmall: "".concat(medium,"px"), small:"".concat(medium,"px"), medium:"".concat(large,"px"), large:"".concat(large,"px"), xlarge:"".concat(large,"px");
}

.c2 {
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  border-radius: 50%;
  border: none;
  color: rgba(153,153,153,0.5);
  width: 40px;
  background-color: transparent;
  box-shadow: none;
  outline: none;
  height: auto;
  opacity: 0.8;
  padding: 0;
  -webkit-transition: opacity 0.4s ease;
  transition: opacity 0.4s ease;
  width: auto;
}

.c4 .c6 {
  margin-right: 0;
}

.c4:hover,
.c4:focus {
  box-shadow: none;
  background-color: rgba(204,204,204,0.4);
  color: #4c4c4c;
}

.c4:active {
  box-shadow: none;
  background-color: rgba(204,204,204,0.5);
  color: #4c4c4c;
}

.c4:hover {
  background: none;
  opacity: 1;
}

.c0 {
  border-radius: 8px;
  box-sizing: border-box;
  font-size: 16px;
  background-color: #f2f2f2;
  border: 1.5px solid #999999;
  color: #191919;
  padding: 12px 16px;
}

.c0 .c1 .c8 {
  color: #999999;
  margin-right: 16px;
}

.c0 .c1 .c3 {
  color: #999999;
  margin: 0 0 0 16px;
}

<div
  className="c0"
  role="alert"
>
  <div
    className="c1 c2"
    onClose={[Function]}
  >
    <span>
      Sample alert
    </span>
    <button
      className="c3 c4 c5"
      disabled={false}
      onClick={[Function]}
      size="medium"
      type="button"
    >
      <span
        aria-hidden="true"
        className="material-icons MuiIcon-root-1 c6 c7"
        size="medium"
        style={
          Object {
            "color": "",
          }
        }
      >
        close
      </span>
    </button>
  </div>
</div>
`;

exports[`Alert component When you set a alert custom icon Should match the snapshot with an icon 1`] = `
.c8 {
  pointer-events: none;
  margin-right: 8px;
}

.c6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: bold;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.2px;
  -moz-letter-spacing: 0.2px;
  -ms-letter-spacing: 0.2px;
  letter-spacing: 0.2px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  line-height: 24px;
  min-height: 40px;
  padding: 8px 16px;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  background-color: #999999;
  color: #f2f2f2;
  border: 1px solid #999999;
  box-shadow: 0px 3px 1px -2px rgba(153,153,153,0.2),0px 2px 2px 0px rgba(153,153,153,0.14),0px 1px 5px 0px rgba(153,153,153,0.12);
}

.c6:hover {
  box-shadow: 0px 2px 4px -1px rgba(76,76,76,0.2),0px 4px 5px 0px rgba(76,76,76,0.14),0px 1px 10px 0px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
  border-color: #4c4c4c;
}

.c6:focus,
.c6:focus-within {
  box-shadow: 0px 2px 4px -1px rgba(153,153,153,0.2),0px 4px 5px 0px rgba(153,153,153,0.14),0px 1px 10px 0px rgba(153,153,153,0.12);
}

.c6:active {
  box-shadow: 0px 5px 5px -3px rgba(76,76,76,0.2),0px 8px 10px 1px rgba(76,76,76,0.14),0px 3px 14px 2px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
}

.c6 .c7 function (_ref6) {
  -webkit-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -moz-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -ms-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  return: "\\n          font-size: ".concat(sizes[size],";\\n          margin-right: ").concat(xxsmall,"px;\\n        ");
}

.c6 .c7 function (_ref6) var sizes = {
  xsmall: "".concat(medium,"px"), small:"".concat(medium,"px"), medium:"".concat(large,"px"), large:"".concat(large,"px"), xlarge:"".concat(large,"px");
}

.c2 {
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c5 {
  border-radius: 50%;
  border: none;
  color: rgba(153,153,153,0.5);
  width: 40px;
  background-color: transparent;
  box-shadow: none;
  outline: none;
  height: auto;
  opacity: 0.8;
  padding: 0;
  -webkit-transition: opacity 0.4s ease;
  transition: opacity 0.4s ease;
  width: auto;
}

.c5 .c7 {
  margin-right: 0;
}

.c5:hover,
.c5:focus {
  box-shadow: none;
  background-color: rgba(204,204,204,0.4);
  color: #4c4c4c;
}

.c5:active {
  box-shadow: none;
  background-color: rgba(204,204,204,0.5);
  color: #4c4c4c;
}

.c5:hover {
  background: none;
  opacity: 1;
}

.c0 {
  border-radius: 8px;
  box-sizing: border-box;
  font-size: 16px;
  background-color: #f2f2f2;
  border: 1.5px solid #999999;
  color: #191919;
  padding: 12px 16px;
}

.c0 .c1 .c3 {
  color: #999999;
  margin-right: 16px;
}

.c0 .c1 .c4 {
  color: #999999;
  margin: 0 0 0 16px;
}

<div
  className="c0"
  role="alert"
>
  <div
    className="c1 c2"
    onClose={[Function]}
  >
    <span
      aria-hidden="true"
      className="material-icons MuiIcon-root-1 c3 "
      style={
        Object {
          "color": "",
        }
      }
    >
      info
    </span>
    <span>
      Sample alert
    </span>
    <button
      className="c4 c5 c6"
      disabled={false}
      onClick={[Function]}
      size="medium"
      type="button"
    >
      <span
        aria-hidden="true"
        className="material-icons MuiIcon-root-1 c7 c8"
        size="medium"
        style={
          Object {
            "color": "",
          }
        }
      >
        close
      </span>
    </button>
  </div>
</div>
`;

exports[`Alert component When you set a different skin Should match a skin snapshot 1`] = `
.c7 {
  pointer-events: none;
  margin-right: 8px;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: bold;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.2px;
  -moz-letter-spacing: 0.2px;
  -ms-letter-spacing: 0.2px;
  letter-spacing: 0.2px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  line-height: 24px;
  min-height: 40px;
  padding: 8px 16px;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  background-color: #999999;
  color: #f2f2f2;
  border: 1px solid #999999;
  box-shadow: 0px 3px 1px -2px rgba(153,153,153,0.2),0px 2px 2px 0px rgba(153,153,153,0.14),0px 1px 5px 0px rgba(153,153,153,0.12);
}

.c5:hover {
  box-shadow: 0px 2px 4px -1px rgba(76,76,76,0.2),0px 4px 5px 0px rgba(76,76,76,0.14),0px 1px 10px 0px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
  border-color: #4c4c4c;
}

.c5:focus,
.c5:focus-within {
  box-shadow: 0px 2px 4px -1px rgba(153,153,153,0.2),0px 4px 5px 0px rgba(153,153,153,0.14),0px 1px 10px 0px rgba(153,153,153,0.12);
}

.c5:active {
  box-shadow: 0px 5px 5px -3px rgba(76,76,76,0.2),0px 8px 10px 1px rgba(76,76,76,0.14),0px 3px 14px 2px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
}

.c5 .c6 function (_ref6) {
  -webkit-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -moz-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -ms-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  return: "\\n          font-size: ".concat(sizes[size],";\\n          margin-right: ").concat(xxsmall,"px;\\n        ");
}

.c5 .c6 function (_ref6) var sizes = {
  xsmall: "".concat(medium,"px"), small:"".concat(medium,"px"), medium:"".concat(large,"px"), large:"".concat(large,"px"), xlarge:"".concat(large,"px");
}

.c2 {
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  border-radius: 50%;
  border: none;
  color: rgba(153,153,153,0.5);
  width: 40px;
  background-color: transparent;
  box-shadow: none;
  outline: none;
  height: auto;
  opacity: 0.8;
  padding: 0;
  -webkit-transition: opacity 0.4s ease;
  transition: opacity 0.4s ease;
  width: auto;
}

.c4 .c6 {
  margin-right: 0;
}

.c4:hover,
.c4:focus {
  box-shadow: none;
  background-color: rgba(204,204,204,0.4);
  color: #4c4c4c;
}

.c4:active {
  box-shadow: none;
  background-color: rgba(204,204,204,0.5);
  color: #4c4c4c;
}

.c4:hover {
  background: none;
  opacity: 1;
}

.c0 {
  border-radius: 8px;
  box-sizing: border-box;
  font-size: 16px;
  background-color: #f2f2f2;
  border: 1.5px solid #999999;
  color: #191919;
  padding: 12px 16px;
}

.c0 .c1 .c8 {
  color: #999999;
  margin-right: 16px;
}

.c0 .c1 .c3 {
  color: #999999;
  margin: 0 0 0 16px;
}

<div
  className="c0"
  role="alert"
>
  <div
    className="c1 c2"
    onClose={[Function]}
  >
    <span>
      blue
    </span>
    <button
      className="c3 c4 c5"
      disabled={false}
      onClick={[Function]}
      size="medium"
      type="button"
    >
      <span
        aria-hidden="true"
        className="material-icons MuiIcon-root-1 c6 c7"
        size="medium"
        style={
          Object {
            "color": "",
          }
        }
      >
        close
      </span>
    </button>
  </div>
</div>
`;

exports[`Alert component When you set a different skin Should match a skin snapshot 2`] = `
.c7 {
  pointer-events: none;
  margin-right: 8px;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: bold;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.2px;
  -moz-letter-spacing: 0.2px;
  -ms-letter-spacing: 0.2px;
  letter-spacing: 0.2px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  line-height: 24px;
  min-height: 40px;
  padding: 8px 16px;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  background-color: #999999;
  color: #f2f2f2;
  border: 1px solid #999999;
  box-shadow: 0px 3px 1px -2px rgba(153,153,153,0.2),0px 2px 2px 0px rgba(153,153,153,0.14),0px 1px 5px 0px rgba(153,153,153,0.12);
}

.c5:hover {
  box-shadow: 0px 2px 4px -1px rgba(76,76,76,0.2),0px 4px 5px 0px rgba(76,76,76,0.14),0px 1px 10px 0px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
  border-color: #4c4c4c;
}

.c5:focus,
.c5:focus-within {
  box-shadow: 0px 2px 4px -1px rgba(153,153,153,0.2),0px 4px 5px 0px rgba(153,153,153,0.14),0px 1px 10px 0px rgba(153,153,153,0.12);
}

.c5:active {
  box-shadow: 0px 5px 5px -3px rgba(76,76,76,0.2),0px 8px 10px 1px rgba(76,76,76,0.14),0px 3px 14px 2px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
}

.c5 .c6 function (_ref6) {
  -webkit-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -moz-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -ms-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  return: "\\n          font-size: ".concat(sizes[size],";\\n          margin-right: ").concat(xxsmall,"px;\\n        ");
}

.c5 .c6 function (_ref6) var sizes = {
  xsmall: "".concat(medium,"px"), small:"".concat(medium,"px"), medium:"".concat(large,"px"), large:"".concat(large,"px"), xlarge:"".concat(large,"px");
}

.c2 {
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  border-radius: 50%;
  border: none;
  color: rgba(153,153,153,0.5);
  width: 40px;
  background-color: transparent;
  box-shadow: none;
  outline: none;
  height: auto;
  opacity: 0.8;
  padding: 0;
  -webkit-transition: opacity 0.4s ease;
  transition: opacity 0.4s ease;
  width: auto;
}

.c4 .c6 {
  margin-right: 0;
}

.c4:hover,
.c4:focus {
  box-shadow: none;
  background-color: rgba(204,204,204,0.4);
  color: #4c4c4c;
}

.c4:active {
  box-shadow: none;
  background-color: rgba(204,204,204,0.5);
  color: #4c4c4c;
}

.c4:hover {
  background: none;
  opacity: 1;
}

.c8 .c1 .c9 {
  color: #999999;
  margin-right: 16px;
}

.c8 .c1 .c3 {
  color: #999999;
  margin: 0 0 0 16px;
}

.c0 {
  border-radius: 8px;
  box-sizing: border-box;
  font-size: 16px;
  background-color: #e5edfc;
  border: 1.5px solid #1355d0;
  color: #062ab3;
  padding: 12px 16px;
}

.c0 .c1 .c9 {
  color: #1355d0;
  margin-right: 16px;
}

.c0 .c1 .c3 {
  color: #1355d0;
  margin: 0 0 0 16px;
}

<div
  className="c0"
  role="alert"
>
  <div
    className="c1 c2"
    onClose={[Function]}
  >
    <span>
      blue
    </span>
    <button
      className="c3 c4 c5"
      disabled={false}
      onClick={[Function]}
      size="medium"
      type="button"
    >
      <span
        aria-hidden="true"
        className="material-icons MuiIcon-root-1 c6 c7"
        size="medium"
        style={
          Object {
            "color": "",
          }
        }
      >
        close
      </span>
    </button>
  </div>
</div>
`;

exports[`Alert component When you set a different skin Should match a skin snapshot 3`] = `
.c7 {
  pointer-events: none;
  margin-right: 8px;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: bold;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.2px;
  -moz-letter-spacing: 0.2px;
  -ms-letter-spacing: 0.2px;
  letter-spacing: 0.2px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  line-height: 24px;
  min-height: 40px;
  padding: 8px 16px;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  background-color: #999999;
  color: #f2f2f2;
  border: 1px solid #999999;
  box-shadow: 0px 3px 1px -2px rgba(153,153,153,0.2),0px 2px 2px 0px rgba(153,153,153,0.14),0px 1px 5px 0px rgba(153,153,153,0.12);
}

.c5:hover {
  box-shadow: 0px 2px 4px -1px rgba(76,76,76,0.2),0px 4px 5px 0px rgba(76,76,76,0.14),0px 1px 10px 0px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
  border-color: #4c4c4c;
}

.c5:focus,
.c5:focus-within {
  box-shadow: 0px 2px 4px -1px rgba(153,153,153,0.2),0px 4px 5px 0px rgba(153,153,153,0.14),0px 1px 10px 0px rgba(153,153,153,0.12);
}

.c5:active {
  box-shadow: 0px 5px 5px -3px rgba(76,76,76,0.2),0px 8px 10px 1px rgba(76,76,76,0.14),0px 3px 14px 2px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
}

.c5 .c6 function (_ref6) {
  -webkit-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -moz-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -ms-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  return: "\\n          font-size: ".concat(sizes[size],";\\n          margin-right: ").concat(xxsmall,"px;\\n        ");
}

.c5 .c6 function (_ref6) var sizes = {
  xsmall: "".concat(medium,"px"), small:"".concat(medium,"px"), medium:"".concat(large,"px"), large:"".concat(large,"px"), xlarge:"".concat(large,"px");
}

.c2 {
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  border-radius: 50%;
  border: none;
  color: rgba(153,153,153,0.5);
  width: 40px;
  background-color: transparent;
  box-shadow: none;
  outline: none;
  height: auto;
  opacity: 0.8;
  padding: 0;
  -webkit-transition: opacity 0.4s ease;
  transition: opacity 0.4s ease;
  width: auto;
}

.c4 .c6 {
  margin-right: 0;
}

.c4:hover,
.c4:focus {
  box-shadow: none;
  background-color: rgba(204,204,204,0.4);
  color: #4c4c4c;
}

.c4:active {
  box-shadow: none;
  background-color: rgba(204,204,204,0.5);
  color: #4c4c4c;
}

.c4:hover {
  background: none;
  opacity: 1;
}

.c8 .c1 .c10 {
  color: #999999;
  margin-right: 16px;
}

.c8 .c1 .c3 {
  color: #999999;
  margin: 0 0 0 16px;
}

.c9 .c1 .c10 {
  color: #1355d0;
  margin-right: 16px;
}

.c9 .c1 .c3 {
  color: #1355d0;
  margin: 0 0 0 16px;
}

.c0 {
  border-radius: 8px;
  box-sizing: border-box;
  font-size: 16px;
  background-color: #edfadf;
  border: 1.5px solid #7ed321;
  color: #3c6510;
  padding: 12px 16px;
}

.c0 .c1 .c10 {
  color: #7ed321;
  margin-right: 16px;
}

.c0 .c1 .c3 {
  color: #7ed321;
  margin: 0 0 0 16px;
}

<div
  className="c0"
  role="alert"
>
  <div
    className="c1 c2"
    onClose={[Function]}
  >
    <span>
      success
    </span>
    <button
      className="c3 c4 c5"
      disabled={false}
      onClick={[Function]}
      size="medium"
      type="button"
    >
      <span
        aria-hidden="true"
        className="material-icons MuiIcon-root-1 c6 c7"
        size="medium"
        style={
          Object {
            "color": "",
          }
        }
      >
        close
      </span>
    </button>
  </div>
</div>
`;

exports[`Alert component When you set a different skin Should match a skin snapshot 4`] = `
.c7 {
  pointer-events: none;
  margin-right: 8px;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: bold;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.2px;
  -moz-letter-spacing: 0.2px;
  -ms-letter-spacing: 0.2px;
  letter-spacing: 0.2px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  line-height: 24px;
  min-height: 40px;
  padding: 8px 16px;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  background-color: #999999;
  color: #f2f2f2;
  border: 1px solid #999999;
  box-shadow: 0px 3px 1px -2px rgba(153,153,153,0.2),0px 2px 2px 0px rgba(153,153,153,0.14),0px 1px 5px 0px rgba(153,153,153,0.12);
}

.c5:hover {
  box-shadow: 0px 2px 4px -1px rgba(76,76,76,0.2),0px 4px 5px 0px rgba(76,76,76,0.14),0px 1px 10px 0px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
  border-color: #4c4c4c;
}

.c5:focus,
.c5:focus-within {
  box-shadow: 0px 2px 4px -1px rgba(153,153,153,0.2),0px 4px 5px 0px rgba(153,153,153,0.14),0px 1px 10px 0px rgba(153,153,153,0.12);
}

.c5:active {
  box-shadow: 0px 5px 5px -3px rgba(76,76,76,0.2),0px 8px 10px 1px rgba(76,76,76,0.14),0px 3px 14px 2px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
}

.c5 .c6 function (_ref6) {
  -webkit-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -moz-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -ms-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  return: "\\n          font-size: ".concat(sizes[size],";\\n          margin-right: ").concat(xxsmall,"px;\\n        ");
}

.c5 .c6 function (_ref6) var sizes = {
  xsmall: "".concat(medium,"px"), small:"".concat(medium,"px"), medium:"".concat(large,"px"), large:"".concat(large,"px"), xlarge:"".concat(large,"px");
}

.c2 {
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  border-radius: 50%;
  border: none;
  color: rgba(153,153,153,0.5);
  width: 40px;
  background-color: transparent;
  box-shadow: none;
  outline: none;
  height: auto;
  opacity: 0.8;
  padding: 0;
  -webkit-transition: opacity 0.4s ease;
  transition: opacity 0.4s ease;
  width: auto;
}

.c4 .c6 {
  margin-right: 0;
}

.c4:hover,
.c4:focus {
  box-shadow: none;
  background-color: rgba(204,204,204,0.4);
  color: #4c4c4c;
}

.c4:active {
  box-shadow: none;
  background-color: rgba(204,204,204,0.5);
  color: #4c4c4c;
}

.c4:hover {
  background: none;
  opacity: 1;
}

.c8 .c1 .c11 {
  color: #999999;
  margin-right: 16px;
}

.c8 .c1 .c3 {
  color: #999999;
  margin: 0 0 0 16px;
}

.c9 .c1 .c11 {
  color: #1355d0;
  margin-right: 16px;
}

.c9 .c1 .c3 {
  color: #1355d0;
  margin: 0 0 0 16px;
}

.c10 .c1 .c11 {
  color: #7ed321;
  margin-right: 16px;
}

.c10 .c1 .c3 {
  color: #7ed321;
  margin: 0 0 0 16px;
}

.c0 {
  border-radius: 8px;
  box-sizing: border-box;
  font-size: 16px;
  background-color: #ffefd6;
  border: 1.5px solid #f09100;
  color: #a36300;
  padding: 12px 16px;
}

.c0 .c1 .c11 {
  color: #f09100;
  margin-right: 16px;
}

.c0 .c1 .c3 {
  color: #f09100;
  margin: 0 0 0 16px;
}

<div
  className="c0"
  role="alert"
>
  <div
    className="c1 c2"
    onClose={[Function]}
  >
    <span>
      warning
    </span>
    <button
      className="c3 c4 c5"
      disabled={false}
      onClick={[Function]}
      size="medium"
      type="button"
    >
      <span
        aria-hidden="true"
        className="material-icons MuiIcon-root-1 c6 c7"
        size="medium"
        style={
          Object {
            "color": "",
          }
        }
      >
        close
      </span>
    </button>
  </div>
</div>
`;

exports[`Alert component When you set a different skin Should match a skin snapshot 5`] = `
.c7 {
  pointer-events: none;
  margin-right: 8px;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-weight: bold;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-letter-spacing: 0.2px;
  -moz-letter-spacing: 0.2px;
  -ms-letter-spacing: 0.2px;
  letter-spacing: 0.2px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  line-height: 24px;
  min-height: 40px;
  padding: 8px 16px;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  background-color: #999999;
  color: #f2f2f2;
  border: 1px solid #999999;
  box-shadow: 0px 3px 1px -2px rgba(153,153,153,0.2),0px 2px 2px 0px rgba(153,153,153,0.14),0px 1px 5px 0px rgba(153,153,153,0.12);
}

.c5:hover {
  box-shadow: 0px 2px 4px -1px rgba(76,76,76,0.2),0px 4px 5px 0px rgba(76,76,76,0.14),0px 1px 10px 0px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
  border-color: #4c4c4c;
}

.c5:focus,
.c5:focus-within {
  box-shadow: 0px 2px 4px -1px rgba(153,153,153,0.2),0px 4px 5px 0px rgba(153,153,153,0.14),0px 1px 10px 0px rgba(153,153,153,0.12);
}

.c5:active {
  box-shadow: 0px 5px 5px -3px rgba(76,76,76,0.2),0px 8px 10px 1px rgba(76,76,76,0.14),0px 3px 14px 2px rgba(76,76,76,0.12);
  background-color: #4c4c4c;
}

.c5 .c6 function (_ref6) {
  -webkit-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -moz-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  -ms-var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  var: size = _ref6.size, _ref6$theme$spacing = _ref6.theme.spacing, xxsmall = _ref6$theme$spacing.xxsmall, medium = _ref6$theme$spacing.medium, large = _ref6$theme$spacing.large;
  return: "\\n          font-size: ".concat(sizes[size],";\\n          margin-right: ").concat(xxsmall,"px;\\n        ");
}

.c5 .c6 function (_ref6) var sizes = {
  xsmall: "".concat(medium,"px"), small:"".concat(medium,"px"), medium:"".concat(large,"px"), large:"".concat(large,"px"), xlarge:"".concat(large,"px");
}

.c2 {
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  border-radius: 50%;
  border: none;
  color: rgba(153,153,153,0.5);
  width: 40px;
  background-color: transparent;
  box-shadow: none;
  outline: none;
  height: auto;
  opacity: 0.8;
  padding: 0;
  -webkit-transition: opacity 0.4s ease;
  transition: opacity 0.4s ease;
  width: auto;
}

.c4 .c6 {
  margin-right: 0;
}

.c4:hover,
.c4:focus {
  box-shadow: none;
  background-color: rgba(204,204,204,0.4);
  color: #4c4c4c;
}

.c4:active {
  box-shadow: none;
  background-color: rgba(204,204,204,0.5);
  color: #4c4c4c;
}

.c4:hover {
  background: none;
  opacity: 1;
}

.c8 .c1 .c12 {
  color: #999999;
  margin-right: 16px;
}

.c8 .c1 .c3 {
  color: #999999;
  margin: 0 0 0 16px;
}

.c9 .c1 .c12 {
  color: #1355d0;
  margin-right: 16px;
}

.c9 .c1 .c3 {
  color: #1355d0;
  margin: 0 0 0 16px;
}

.c10 .c1 .c12 {
  color: #7ed321;
  margin-right: 16px;
}

.c10 .c1 .c3 {
  color: #7ed321;
  margin: 0 0 0 16px;
}

.c11 .c1 .c12 {
  color: #f09100;
  margin-right: 16px;
}

.c11 .c1 .c3 {
  color: #f09100;
  margin: 0 0 0 16px;
}

.c0 {
  border-radius: 8px;
  box-sizing: border-box;
  font-size: 16px;
  background-color: #ffe5e9;
  border: 1.5px solid #ff2d4d;
  color: #ac001a;
  padding: 12px 16px;
}

.c0 .c1 .c12 {
  color: #ff2d4d;
  margin-right: 16px;
}

.c0 .c1 .c3 {
  color: #ff2d4d;
  margin: 0 0 0 16px;
}

<div
  className="c0"
  role="alert"
>
  <div
    className="c1 c2"
    onClose={[Function]}
  >
    <span>
      error
    </span>
    <button
      className="c3 c4 c5"
      disabled={false}
      onClick={[Function]}
      size="medium"
      type="button"
    >
      <span
        aria-hidden="true"
        className="material-icons MuiIcon-root-1 c6 c7"
        size="medium"
        style={
          Object {
            "color": "",
          }
        }
      >
        close
      </span>
    </button>
  </div>
</div>
`;
